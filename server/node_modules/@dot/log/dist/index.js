"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.log = exports.getLog = exports.LogFactory = void 0;
const chalk_1 = __importDefault(require("chalk"));
const loglevelnext_1 = __importDefault(require("loglevelnext"));
const p_defer_1 = __importDefault(require("p-defer"));
const LogFactory_1 = require("./LogFactory");
Object.defineProperty(exports, "LogFactory", { enumerable: true, get: function () { return LogFactory_1.LogFactory; } });
const defaultEnv = { DOT_LOG_LEVEL: 'info' };
const ready = (0, p_defer_1.default)();
const colors = {
    debug: (0, chalk_1.default) `{magenta {inverse  {bold debug }}}`,
    error: (0, chalk_1.default) `{red {inverse  {bold error }}}`,
    info: (0, chalk_1.default) `{blue {inverse  {bold info }}}`,
    trace: (0, chalk_1.default) `{green {inverse  {bold trace }}}`,
    warn: (0, chalk_1.default) `{yellow {inverse  {bold warn }}}`
};
const defaults = {
    name: ''
};
const getLog = (opts) => {
    const options = Object.assign({}, defaults, opts);
    const logName = options.name ? `${options.name} ` : '';
    const brand = options.brand ? (0, chalk_1.default) ` {blue ${options.brand}} ` : ' ';
    const template = `[{{time}}]${brand}${logName}{{level}} `;
    const factory = new LogFactory_1.LogFactory({
        level: ({ level }) => colors[level],
        ready,
        template,
        time: () => new Date().toTimeString().split(' ')[0]
    });
    const { DOT_LOG_LEVEL = 'info' } = typeof process === 'undefined' ? defaultEnv : process.env;
    const logOptions = {
        factory,
        level: DOT_LOG_LEVEL,
        name: `dot-log:${options.name}`
    };
    const log = loglevelnext_1.default.create(logOptions);
    return log;
};
exports.getLog = getLog;
exports.log = (0, exports.getLog)();
//# sourceMappingURL=index.js.map